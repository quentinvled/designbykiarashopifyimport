const SHEET_ID = "1d195lIWH04e_g2glDcx7e-92DSq53J4upziHcyVzJCQ";
const SHEET_NAME = "Produits";

function doPost(e) {
  try {
    // Sécurité : vérifie qu'on reçoit bien des données
    if (!e || !e.parameter || !e.parameter.data) {
      throw new Error("Aucune donnée reçue dans le paramètre 'data'");
    }

    // Décodage et parsing du JSON
    const rawData = decodeURIComponent(e.parameter.data);
    const data = JSON.parse(rawData);

    // Accès à la feuille
    const sheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME)
      || SpreadsheetApp.openById(SHEET_ID).insertSheet(SHEET_NAME);

    // Ajout des en-têtes si la feuille est vide
    if (sheet.getLastRow() === 0) {
      sheet.appendRow([
        "Timestamp", "Boutique", "Email", 
        "Produit", "Type", "Description", 
        "Prix", "Stock Suivi", "Quantité Stock", 
        "Notes", "Images", "Variantes"
      ]);
    }

    // Ajout des produits ligne par ligne
    data.products.forEach(product => {
      const row = [
        data.timestamp,
        data.shopInfo.name,
        data.shopInfo.email,
        product.title,
        product.productType,
        product.description,
        product.price,
        product.trackStock ? "Oui" : "Non",
        product.stock || "N/A",
        product.notes,
        product.images.map(img => img.name).join("\n"),
        product.variants.map(v => `${v.name}: ${v.values.join(', ')}`).join("\n")
      ];
      sheet.appendRow(row);
    });

    // Retour JSON (non visible car iframe, mais utile pour debug)
    return ContentService.createTextOutput(JSON.stringify({
      success: true,
      message: `${data.products.length} produit(s) enregistré(s)`
    })).setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    // Gestion d'erreur avec retour clair
    return ContentService.createTextOutput(JSON.stringify({
      success: false,
      error: error.message
    })).setMimeType(ContentService.MimeType.JSON);
  }
}
